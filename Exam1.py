#Student Name: Huzaifa Shoeb, ID: 1925670
#Exam 1 CIS 3368 (11AM to 1PM) Code

# Importing all the tools that might by needed for this code (SQL, Flask, Hashlib, Datetime, Creds)
import mysql.connector
from mysql.connector import Error
from sql import create_connection
from sql import execute_query
from sql import execute_read_query
import hashlib
import datetime
import time
import creds
import flask
from flask import Flask
from flask import jsonify
from flask import request, make_response
from flask import abort      # Importing 'abort' from the module Flask for this part - saw this on Stack Overflow


# Establishing a connection to my mysql database, Referenced from class notes from Professor Otto
# myCreds = creds.Creds()
# conn = create_connection(myCreds.conString, myCreds.userName, myCreds.password, myCreds.dbName)

# # Connect to the MySQL database, I have put this information here so I do not have to submit multiple files, using same setup from my HW 2 submission
connection = mysql.connector.connect(
     host="cis3368spring.c7ykkkkkq29g.us-east-1.rds.amazonaws.com",
     user="admin",
     password="saturnskyblack",
     database="cis3368springdb"
       )


# My database is created on mySQL, Below is the code I used in workbench to create my database

# CREATE TABLE IF NOT EXISTS coupon (
#     id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,     #"ID is autogenerated, and always positive"
#     code VARCHAR(255) UNIQUE NOT NULL,
#     discount DECIMAL(5, 2) NOT NULL,                #Using decimal will allow precise calculations in the future with cents being accounted for
#     PRIMARY KEY (id)                                #"The primary key for this db is the id"
# );

# select * from coupon                                #"This shows me the results in sql"

# Below are the codes for all entries in the databse from mySQL

# INSERT INTO coupon (code, discount) VALUES
#   ('20PERCENT', 20),     "Required 20"
#   ('40OFF', 40),         "Required 40"
#   ('80DISCOUNT', 80),    "Required 80"
#   ('TREAT10OFF', 10),    "My entry for 10 percent off"
#   ('WOWDEAL', 50);       "My entry for 50 percent off"

# select * from coupon           "Again, shows the results in databse"


# Starting here is my API code for this exam!

app = Flask(__name__)
cursor = connection.cursor()

# POST API method is here
@app.route('/api/coupon', methods=['POST'])
def add_coupon():
    data = request.get_json()
    code = data.get('code')              # Get the value from my databse column 'code'
    discount = data.get('discount')      # Get the value from my databse column 'discount'

    # Making sure that the coupon code does not laready exist, will help against redundancies
    cursor.execute("SELECT * FROM coupon WHERE discount = %s", (discount,))  #SQL query
    coupon_already_exists = cursor.fetchone()

    # Using IF argument
    if coupon_already_exists:           

        # I referenced Professor Otto's Notes here for the correct syntax to make jsonify work.
             
        return jsonify({'message': 'Sorry, this discount coupon for this percentage already exists. Please Try again. Thank you!'}), 400

    # If a new coupon is available and needs to be posted
    new_coupon = "INSERT INTO coupon (code, discount) VALUES (%s, %s)"
    cursor.execute(new_coupon, (code, discount))
    connection.commit()                #Commiting for saves of the entry is important for protection from garbage collector


    return jsonify({'message': 'The Coupon was added successfully and is available for use now!'}), 201   


# Here is my GET API method

valid_time_token = 1609459199  # Searched the Unix timestamp for December 1, 2024, 23:59:59 on internet. This was provided


@app.route('/api/calculate', methods=['GET'])
def calculating_discount():

# For the extra credit, I referenced Stack Overflow on how to use timestamps. Trying to implement that here in my code
# Importing 'abort' from the module Flask for this part - saw this on Stack Overflow
    
    # Verify the time token
    current_time = int(time.time())
    if current_time > valid_time_token:  #Writing an if argument to check whether the time stamp is valid
        abort(401, description="Access Denied. The time token was expired, user access terminated.")  #Using 'abort' referenced from stack overflow as mentioned earlier

    # I learnt this in a youtube video by Mosh Hamdani to understand how to use the request.headers.get function of jsonify
    # The sytax used in class was the append method to add queries in a list. I Don't think I can use that here.

    code = request.headers.get('code')
    amount = float(request.headers.get('amount', 0))   

    # Show the information of the discount code
    cursor.execute("SELECT * FROM coupon WHERE code = %s", (code,))
    coupon = cursor.fetchone()

# Here is the if not argument for a code that does not exist in my databse table.
    if not coupon:
        return jsonify({'message': 'Sorry, This coupon is not active at this time. Please try a different coupon. You can also contact customer service if this is an error.'}), 404

    discount_in_percent = coupon[2]

    # For math calculation, We will follow basic BODMAS concept, brackets of Division, Multiplication, Addition, Subtraction
    amount_after = amount - (amount * (discount_in_percent / 100))
    # In this formula, the amount was divided by 100, multiplied by the amount, and subtracted from the actual amount before the discount was applied

    return jsonify({'amount_after': amount_after})

# Referenced from CIS 2348, Professor Edward Ratner. Always use the main value against the name. This have helped me in the past from keeping the program from crashing on my computer.
if __name__ == '__main__':
    app.run(debug=True)

# End of Code for CIS 3368 Exam 1, Proffessor Otto Dobretsberger.
# Summary of References used- Professor Otto Dobretsberger, Mosh Hamdani from youtube, Professor Edward Ratner, Stack Overflow
# Thank You.

